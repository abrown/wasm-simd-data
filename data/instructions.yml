families:
- name: const
  # Note that the name can be used to generate a link to the relevant
  # section in the specification, so the name must exactly match
  # the specification.
  title: Constant
  description: >-
    Materialize a constant `v128` SIMD value from the 16 immediate
    bytes in the immediate mode operand `imm`. The `v128.const`
    instruction is encoded with 16 immediate bytes which provide the
    bits of the vector directly.
- name: splat
  title: Create vector with identical lanes
  description: >-
    Construct a vector with x replicated to all lanes.
  operation: |
    def S.splat(x):
      result = S.New()
      for i in range(S.Lanes):
          result[i] = S.Reduce(x)
      return result
- name: load
  title: Load
  description: >-
    Load a `v128` vector from the given heap address.
  operation: |
    def S.load(memarg):
      return S.from_bytes(memory[memarg.offset:memarg.offset + 16])

instructions:
- name: v128.const
  opcode: 0x0c
  params:
  - name: imm
    type: ImmByte[16]
  return: v128

- name: i8x16.splat
  opcode: 0x01
  params:
  - name: x
    type: i32
  intrin:
  - name: wasm_i8x16_splat
    return: v128_t
    params:
    - type: int8_t
      name: __a
      map: x
  wav:
  - name: wav_i8x16_splat
    alias:
    - wav_splat
    return: wav_i8x16_t
    params:
    - type: int8_t
      name: value
      map: x
# ...
- name: v128.load
  opcode: 0x00
  params:
  - name: memarg
  return: v128
  intrin:
  - name: wasm_v128_load
    return: v128_t
    params:
    - name: __mem
      type: const void *
      map: memarg
  wav:
  - name: wav_i8x16_load
    alias:
    - wav_load
    return: wav_i8x16_t
    params:
    - name: src
      type: int8_t
      array_length: 16
      map: memarg

    